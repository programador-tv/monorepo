name: CI CD

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
    types: [opened, synchronize, reopened]

jobs:
  code_format:
    name: Code Format
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Cache .NET packages
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget
        restore-keys: |
          ${{ runner.os }}-nuget

    - name: Set up .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 8.x.x
    
    - name: Install CSharpier
      run: dotnet tool install -g csharpier

    - name: Check for formatting issues
      run: dotnet csharpier .

    - name: Build and Run .NET Analyzers
      run: dotnet build --configuration Release /p:RunAnalyzersDuringBuild=true
  
  
  code_quality:
    needs: code_format
    name: SonarCloud scan
    runs-on: windows-latest
    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
    - name: Retry Step Template
      id: retry-step
      run: |
        retry() {
          local retries=$1
          shift
          local count=0
          until "$@"; do
            exit=$?
            count=$((count + 1))
            if [ $count -lt $retries ]; then
              echo "Retry $count/$retries:"
              sleep 10
            else
              echo "Failed after $count attempts."
              return $exit
            fi
          done
          return 0
        }
    - name: Cache .NET packages
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget
        restore-keys: |
          ${{ runner.os }}-nuget

    - name: Set up .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 8.x.x
      
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: 'zulu' # Alternative distribution options are available.
        
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
        
    - name: Cache SonarCloud packages
      uses: actions/cache@v3
      with:
        path: ~\sonar\cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
        
    - name: Cache SonarCloud scanner
      id: cache-sonar-scanner
      uses: actions/cache@v3
      with:
        path: .\.sonar\scanner
        key: ${{ runner.os }}-sonar-scanner
        restore-keys: ${{ runner.os }}-sonar-scanner
        
    - name: Install SonarCloud scanner
      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      shell: powershell
      run: |
        New-Item -Path .\.sonar\scanner -ItemType Directory
        dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
        
    - name: Build and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      shell: powershell
      run: |
        .\.sonar\scanner\dotnet-sonarscanner begin /k:"programador-tv_monorepo2" /o:"programador-tv" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml"
        dotnet build
        dotnet test --no-build /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
        .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

  publish_api:
    name: Deploy Core.WebAPI
    runs-on: ubuntu-latest
    needs: [code_format]
    steps:
    - uses: actions/checkout@v3
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1 
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_TOKEN }}
    - name: Build Docker image
      run: |
        retry() {
          local retries=3
          local count=0
          until docker-compose -f docker-compose.prod.yml build core-api; do
            exit=$?
            count=$((count + 1))
            if [ $count -lt $retries ]; then
              echo "Retry $count/$retries:"
              sleep 10
            else
              echo "Failed after $count attempts."
              return $exit
            fi
          done
        }
        retry
    - name: Publish Docker image
      if: github.ref == 'refs/heads/main'
      run: |
        retry() {
          local retries=3
          local count=0
          until docker-compose -f docker-compose.prod.yml push core-api; do
            exit=$?
            count=$((count + 1))
            if [ $count -lt $retries ]; then
              echo "Retry $count/$retries:"
              sleep 10
            else
              echo "Failed after $count attempts."
              return $exit
            fi
          done
        }
        retry

  publish_websocket:
    name: Deploy Core.WebSocket
    runs-on: ubuntu-latest
    needs: [code_format]
    steps:
    - uses: actions/checkout@v3
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1 
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_TOKEN }}
    - name: Build Docker image
      run: |
        retry() {
          local retries=3
          local count=0
          until docker-compose -f docker-compose.prod.yml build core-websocket; do
            exit=$?
            count=$((count + 1))
            if [ $count -lt $retries ]; then
              echo "Retry $count/$retries:"
              sleep 10
            else
              echo "Failed after $count attempts."
              return $exit
            fi
          done
        }
        retry
    - name: Publish Docker image
      if: github.ref == 'refs/heads/main'
      run: |
        retry() {
          local retries=3
          local count=0
          until docker-compose -f docker-compose.prod.yml push core-websocket; do
            exit=$?
            count=$((count + 1))
            if [ $count -lt $retries ]; then
              echo "Retry $count/$retries:"
              sleep 10
            else
              echo "Failed after $count attempts."
              return $exit
            fi
          done
        }
        retry

  publish_background:
    name: Deploy Core.Background
    runs-on: ubuntu-latest
    needs: [code_format]
    steps:
    - uses: actions/checkout@v3
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1 
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_TOKEN }}
    - name: Build Docker image
      run: |
        retry() {
          local retries=3
          local count=0
          until docker-compose -f docker-compose.prod.yml build core-background; do
            exit=$?
            count=$((count + 1))
            if [ $count -lt $retries ]; then
              echo "Retry $count/$retries:"
              sleep 10
            else
              echo "Failed after $count attempts."
              return $exit
            fi
          done
        }
        retry
    - name: Publish Docker image
      if: github.ref == 'refs/heads/main'
      run: |
        retry() {
          local retries=3
          local count=0
          until docker-compose -f docker-compose.prod.yml push core-background; do
            exit=$?
            count=$((count + 1))
            if [ $count -lt $retries ]; then
              echo "Retry $count/$retries:"
              sleep 10
            else
              echo "Failed after $count attempts."
              return $exit
            fi
          done
        }
        retry
         
  publish_background_live:
    name: Deploy Core.Background.Live
    runs-on: ubuntu-latest
    needs: [code_format]
    steps:
    - uses: actions/checkout@v3
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1 
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_TOKEN }}
    - name: Build Docker image
      run: |
        retry() {
          local retries=3
          local count=0
          until docker-compose -f docker-compose.prod.yml build core-background-live; do
            exit=$?
            count=$((count + 1))
            if [ $count -lt $retries ]; then
              echo "Retry $count/$retries:"
              sleep 10
            else
              echo "Failed after $count attempts."
              return $exit
            fi
          done
        }
        retry
    - name: Publish Docker image
      if: github.ref == 'refs/heads/main'
      run: |
        retry() {
          local retries=3
          local count=0
          until docker-compose -f docker-compose.prod.yml push core-background-live; do
            exit=$?
            count=$((count + 1))
            if [ $count -lt $retries ]; then
              echo "Retry $count/$retries:"
              sleep 10
            else
              echo "Failed after $count attempts."
              return $exit
            fi
          done
        }
        retry
         
  publish_background_browser:
    name: Deploy Core.Background.Browser
    runs-on: ubuntu-latest
    needs: [code_format]
    steps:
    - uses: actions/checkout@v3
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1 
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_TOKEN }}
    - name: Build Docker image
      run: |
        retry() {
          local retries=3
          local count=0
          until docker-compose -f docker-compose.prod.yml build core-background-browser; do
            exit=$?
            count=$((count + 1))
            if [ $count -lt $retries ]; then
              echo "Retry $count/$retries:"
              sleep 10
            else
              echo "Failed after $count attempts."
              return $exit
            fi
          done
        }
        retry
    - name: Publish Docker image
      if: github.ref == 'refs/heads/main'
      run: |
        retry() {
          local retries=3
          local count=0
          until docker-compose -f docker-compose.prod.yml push core-background-browser; do
            exit=$?
            count=$((count + 1))
            if [ $count -lt $retries ]; then
              echo "Retry $count/$retries:"
              sleep 10
            else
              echo "Failed after $count attempts."
              return $exit
            fi
          done
        }
        retry
     
  publish_rtmp_live:
    name: Deploy Core.RTMP.Live
    runs-on: ubuntu-latest
    needs: [code_format]
    steps:
    - uses: actions/checkout@v3
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1 
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_TOKEN }}
    - name: Build Docker image
      run: |
        retry() {
          local retries=3
          local count=0
          until docker-compose -f docker-compose.prod.yml build core-rtmp-live; do
            exit=$?
            count=$((count + 1))
            if [ $count -lt $retries ]; then
              echo "Retry $count/$retries:"
              sleep 10
            else
              echo "Failed after $count attempts."
              return $exit
            fi
          done
        }
        retry
    - name: Publish Docker image
      if: github.ref == 'refs/heads/main'
      run: |
        retry() {
          local retries=3
          local count=0
          until docker-compose -f docker-compose.prod.yml push core-rtmp-live; do
            exit=$?
            count=$((count + 1))
            if [ $count -lt $retries ]; then
              echo "Retry $count/$retries:"
              sleep 10
            else
              echo "Failed after $count attempts."
              return $exit
            fi
          done
        }
        retry

  publish_app_platform:
    name: Deploy Core.APP.Platform
    runs-on: ubuntu-latest
    needs: [code_format]
    steps:
    - uses: actions/checkout@v3
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1 
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_TOKEN }}
    - name: Build Docker image
      run: |
        retry() {
          local retries=3
          local count=0
          until docker-compose -f docker-compose.prod.yml build platform; do
            exit=$?
            count=$((count + 1))
            if [ $count -lt $retries ]; then
              echo "Retry $count/$retries:"
              sleep 10
            else
              echo "Failed after $count attempts."
              return $exit
            fi
          done
        }
        retry
    - name: Publish Docker image
      if: github.ref == 'refs/heads/main'
      run: |
        retry() {
          local retries=3
          local count=0
          until docker-compose -f docker-compose.prod.yml push platform; do
            exit=$?
            count=$((count + 1))
            if [ $count -lt $retries ]; then
              echo "Retry $count/$retries:"
              sleep 10
            else
              echo "Failed after $count attempts."
              return $exit
            fi
          done
        }
        retry
