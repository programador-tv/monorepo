// <auto-generated />
using System;
using Infrastructure.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APP.Platform.Migrations.ApplicationDb
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240827194321_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.ChatMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LiveId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PerfilId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Valid")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("ChatMessages");
                });

            modelBuilder.Entity("Domain.Entities.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsValid")
                        .HasColumnType("bit");

                    b.Property<Guid>("LiveId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PerfilId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Domain.Entities.FeedbackJoinTime", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("AvaliadoCompareceu")
                        .HasColumnType("bit");

                    b.Property<bool>("AvaliadorCompareceu")
                        .HasColumnType("bit");

                    b.Property<bool?>("ConheciaAvaliadoPreviamente")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataCancelamento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataTentativaMarcacao")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("DuracaoPrevista")
                        .HasColumnType("time");

                    b.Property<string>("DuracaoPrevistaFormatada")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("EstimativaSalarioAvaliado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("EstimativaSenioridadeAvaliado")
                        .HasColumnType("int");

                    b.Property<Guid>("JoinTimeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("SatisfacaoExperiencia")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FeedbackJoinTimes");
                });

            modelBuilder.Entity("Domain.Entities.FeedbackTimeSelection", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Aceite")
                        .HasColumnType("datetime2");

                    b.Property<bool>("AvaliadoCompareceu")
                        .HasColumnType("bit");

                    b.Property<bool>("AvaliadorCompareceu")
                        .HasColumnType("bit");

                    b.Property<bool?>("ConheciaAvaliadoPreviamente")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataCancelamento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataDeclaracao")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("DuracaoPrevista")
                        .HasColumnType("time");

                    b.Property<string>("DuracaoPrevistaFormatada")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("EstimativaSalarioAvaliado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("EstimativaSenioridadeAvaliado")
                        .HasColumnType("int");

                    b.Property<int?>("SatisfacaoExperiencia")
                        .HasColumnType("int");

                    b.Property<Guid>("TimeSelectionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("FeedbackTimeSelections");
                });

            modelBuilder.Entity("Domain.Entities.Follow", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("FollowerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FollowingId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Follows");
                });

            modelBuilder.Entity("Domain.Entities.FreeTimeBackstage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ilimitado")
                        .HasColumnType("bit");

                    b.Property<int>("MaxParticipants")
                        .HasColumnType("int");

                    b.Property<Guid>("TimeSelectionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("FreeTimeBackstages");
                });

            modelBuilder.Entity("Domain.Entities.HelpBackstage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TimeSelectionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("HelpBackstages");
                });

            modelBuilder.Entity("Domain.Entities.JoinTime", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("NotifiedMentoriaProxima")
                        .HasColumnType("bit");

                    b.Property<Guid?>("PerfilId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("StatusJoinTime")
                        .HasColumnType("int");

                    b.Property<Guid?>("TimeSelectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TipoAction")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("JoinTimes");
                });

            modelBuilder.Entity("Domain.Entities.Like", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsLiked")
                        .HasColumnType("bit");

                    b.Property<Guid>("RelatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Likes");
                });

            modelBuilder.Entity("Domain.Entities.Live", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodigoLive")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormatedDuration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsUsingObs")
                        .HasColumnType("bit");

                    b.Property<bool>("LiveEstaAberta")
                        .HasColumnType("bit");

                    b.Property<Guid>("PerfilId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RecordedUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusLive")
                        .HasColumnType("int");

                    b.Property<string>("StreamId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TentativasDeObterUrl")
                        .HasColumnType("int");

                    b.Property<string>("Thumbnail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("UrlAlias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Visibility")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Lives");
                });

            modelBuilder.Entity("Domain.Entities.LiveBackstage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LiveId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TimeSelectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TituloTemporario")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LiveBackstages");
                });

            modelBuilder.Entity("Domain.Entities.Notification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Conteudo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DestinoPerfilId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GeradorPerfilId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SecundaryLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoNotificacao")
                        .HasColumnType("int");

                    b.Property<bool>("Vizualizado")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("Domain.Entities.NotifyUserLiveEarly", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("LiveId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PerfilId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("hasNotificated")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("NotifyUserLiveEarlies");
                });

            modelBuilder.Entity("Domain.Entities.Presentes", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataEntrou")
                        .HasColumnType("datetime2");

                    b.Property<bool>("EstaPresente")
                        .HasColumnType("bit");

                    b.Property<string>("Foto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PerfilId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Presentes");
                });

            modelBuilder.Entity("Domain.Entities.PresentesOpenRoom", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataEntrou")
                        .HasColumnType("datetime2");

                    b.Property<bool>("EstaPresente")
                        .HasColumnType("bit");

                    b.Property<string>("Foto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PerfilId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PresentesOpenRooms");
                });

            modelBuilder.Entity("Domain.Entities.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodigoSala")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<bool>("EstaAberto")
                        .HasColumnType("bit");

                    b.Property<Guid>("PerfilId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Privado")
                        .HasColumnType("bit");

                    b.Property<int>("TipoSala")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("Domain.Entities.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FreeTimeRelacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LiveRelacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreLiveRelacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomRelacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("Domain.Entities.TimeSelection", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("NotifiedMentoriaProxima")
                        .HasColumnType("bit");

                    b.Property<Guid?>("PerfilId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PreviewImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<int>("TipoAction")
                        .HasColumnType("int");

                    b.Property<string>("TituloTemporario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Variacao")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TimeSelections");
                });

            modelBuilder.Entity("Domain.Entities.Visualization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataEntrou")
                        .HasColumnType("datetime2");

                    b.Property<string>("IPV4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LiveId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PerfilId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Visualizations");
                });
#pragma warning restore 612, 618
        }
    }
}
