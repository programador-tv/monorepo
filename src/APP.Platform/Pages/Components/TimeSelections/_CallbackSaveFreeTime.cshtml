@using Domain.Entities
@using Domain.Models.ViewModels
@using Domain.Enums
@using Platform.Services
@using Domain.Utils
@model _CallbackSaveFreeTimeModel

@{
    bool isARequestHelp = Model.TimeSelectionAndJoinTimes.Key?.Tipo == EnumTipoTimeSelection.RequestHelp;
    string[] stringsExperience = new string[]{"< 1 ano", "1-3 anos", "3-5 anos", "5-7 anos", "> 8 anos"};

    ExperienceLevel[] valuesExperience = (ExperienceLevel[])Enum.GetValues(typeof(ExperienceLevel));
}

<div class="modal fade" id="eventModal-@Model.TimeSelectionAndJoinTimes.Key.Id" tabindex="-1" aria-labelledby="eventModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-body">
                <div id="home-@Model.TimeSelectionAndJoinTimes.Key?.Id">
                    <div style="display: flex;justify-content: space-between;align-items: center;padding: 15px;">
                        <h5 class="modal-title" id="eventModalLabel" style="color: #9067B2;font-size: 32px;font-weight: 500;letter-spacing: 0.015em;margin: 0px;word-wrap: break-word;padding: 0px 30px;text-align: center; line-height: 1.1;">
                            @Model.TimeSelectionAndJoinTimes.Key?.TituloTemporario
                        </h5>
                        <button type="button" class="btn-close mx-0" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div id="modal-freetime-content" style="padding: 15px;">
                        <div id="detalhes" style="">
                            <div id="data" style="display: flex;padding: 0px 20px 20px;gap: 10px;align-items: center;">
                                <span style="background-color: #99B6EE;width: 4px; height: 60px;border-radius: 10px;"></span>
                                @{
                                    var cultureInfo = new System.Globalization.CultureInfo("pt-BR");
                                    var textInfo = cultureInfo.TextInfo;
                                }
                                <div>
                                    <p style="font-size: 13px;"> Início       <strong style="color: #373737;font-weight: 500;font-size: 16px;padding-left: 27px">@textInfo.ToTitleCase(Model.TimeSelectionAndJoinTimes.Key?.StartTime.ToString("dddd, dd 'de' MMMM ' - ' HH:mm", cultureInfo)) </strong></p>
                                    <p style="font-size: 13px; margin: 0"> Término      <strong style="color: #373737;font-weight: 500;font-size: 16px;padding-left: 10px">@textInfo.ToTitleCase(Model.TimeSelectionAndJoinTimes.Key?.EndTime.ToString("dddd, dd 'de' MMMM ' - ' HH:mm", cultureInfo))</strong></p>
                                </div>
                            </div>
                            <div style="display: flex;flex-wrap: wrap;padding-left: 80px;gap: 5px;">
                                @if (Model.TimeSelectionAndJoinTimes.Key?.Tags != null)
                                {
                                    @foreach (var tags in Model.TimeSelectionAndJoinTimes.Key?.Tags)
                                    {
                                    <span class="tag" style="width: fit-content; font-size: 12px;">@tags.Titulo</span>
                                    }
                                }
                            </div>
                    
                        </div>
                        <hr>
                        <div id="interessados" style="padding: 10px;">
                            @if(Model.TimeSelectionAndJoinTimes.Key?.Status == StatusTimeSelection.Pendente)
                            {
                                <p style="margin: 0; font-size: 17.5px;color: #373737;">Interessados:</p>

                                @if(Model.TimeSelectionAndJoinTimes.Value.Count == 0 )
                                {   

                                    <div class="alert-consideration" role="alert">
                                        Aguarde até que tenha interessados.
                                    </div>
                                }
                            }
                            @if(Model.TimeSelectionAndJoinTimes.Key?.Status != StatusTimeSelection.Pendente)
                            {
                                <p style="margin: 0; font-size: 17.5px;color: #373737;">Seu compromisso é com:</p>
                            }
                            
                            <div style="padding-top: 10px;display: flex;align-items: center;align-items: center;justify-content: space-between; flex-wrap: wrap; gap: 10px;">
                                
                                @if(Model.TimeSelectionAndJoinTimes.Key?.Status != StatusTimeSelection.Pendente){
                                   
                                    foreach(var item in Model.TimeSelectionAndJoinTimes.Value)
                                    {
                                        if (item.StatusJoinTime != StatusJoinTime.Pendente && item.StatusJoinTime != StatusJoinTime.Rejeitado && item.StatusJoinTime != StatusJoinTime.Cancelado)
                                        {
                                            <div style="border: 1px solid #f2f2f2;box-shadow: 0px 2px 3px 0px #00000040; width: 200px; height: 100px; border-radius: 8px;display: flex;">
                                                <div style="display: flex;align-items: center;gap: 10px; padding: 10px;">
                                                    @await Html.PartialAsync("Components/_PerfilAvatar",
                                                        new _PerfilAvatar{
                                                            Perfil = item.Perfil ?? new(),
                                                            WithLink = true,
                                                            Size = "avatar-md"
                                                    })
                                                    <div>
                                                        <h6 style="font-size: 16px;font-weight: 700;letter-spacing: 0.015em;text-align: left;margin-bottom: 2px;">@item.Perfil?.Nome</h6>
                                                        <p style="font-size: 12px;font-weight: 500;letter-spacing: 0em;text-align: left;margin-bottom: 2px;margin: 0;word-wrap: break-word;">@item.Perfil?.Bio</p>
                                                        
                                                        @{
                                                            int index = Array.IndexOf(valuesExperience, item.Perfil?.Experiencia);
                                                        }
                                                        <div style="background-color: #FFFFFF;border: 1px solid #CECECE;font-size: 10px;border-radius: 8px;width: 63px;height: 17px;
                                                        padding: 2px 3px;text-align: center;display: flex; align-items: center;justify-content: center;">@stringsExperience[index] xp</div>
                                                    </div>
                                                </div>     
                                            </div>
                                        }
                                    }

                                }

                                @if(Model.TimeSelectionAndJoinTimes.Key?.Status == StatusTimeSelection.Pendente){
    
                                    <div style="width: 130px;display: flex;justify-content: space-between;">
                                @{
                                    int count = 0;
                                    foreach(var item in Model.TimeSelectionAndJoinTimes.Value)
                                    {
                                        switch (count)
                                        {
                                            case 0:
                                                @await Html.PartialAsync("Components/_PerfilAvatar",
                                                    new _PerfilAvatar{
                                                        Perfil = item.Perfil ?? new(),
                                                        WithLink = true,
                                                        Size = "avatar-timeSelection"
                                                })
                                                break;
                                            case 1:
                                                @await Html.PartialAsync("Components/_PerfilAvatar",
                                                    new _PerfilAvatar{
                                                        Perfil = item.Perfil ?? new(),
                                                        WithLink = true,
                                                        Size = "avatar-timeSelection-position1"
                                                });
                                                break;
                                            case 2:
                                                @await Html.PartialAsync("Components/_PerfilAvatar",
                                                    new _PerfilAvatar{
                                                        Perfil = item.Perfil ?? new(),
                                                        WithLink = true,
                                                        Size = "avatar-timeSelection-position2"
                                                });
                                                break;
                                        }
                                            count+=1;   
                                    }
                                }
                                

                                    @{ int interessados = Model.TimeSelectionAndJoinTimes.Value.Count - 3;
                                        if(interessados > 0){
                                            <p style="color: #575757; font-size: 16px;margin: 0;height: fit-content;padding: 10px;s"> +@interessados  </p>
                                        }
                                    }
                                </div>
                                }
                                <div class="d-flex justify-content-center" style=" flex-direction: column; align-items: end;">
                                    
                                    @if(Model.TimeSelectionAndJoinTimes.Key?.Status == StatusTimeSelection.Pendente){
                                        @if(!isARequestHelp){
                                        <div style="text-align: left;margin-bottom: 20px;">
                                            <p style="margin: 0;">Vagas:</p>
                                            <span style="display: flex;">
                                                <img alt="icone-pessoas" src="~/Pictures/Icons/vagas.svg">
                                                @{
                                                    int marcadosCount = Model.TimeSelectionAndJoinTimes.Value.Count(joinTime => joinTime.StatusJoinTime == StatusJoinTime.Marcado);
                                                }
                                                  @if(Model.TimeSelectionAndJoinTimes.Key.Ilimitado){
                                                    <p style="margin: 0;padding: 5px;">
                                                        (Ilimitado)
                                                    </p>
                                                    }else{
                                                        <p style="margin: 0;padding: 5px;">
                                                            (@marcadosCount/@Model.TimeSelectionAndJoinTimes.Key.MaxParticipants)
                                                        </p>
                                                    }
                                                
                                            </span>
                                        </div>
                                        }

                                    <nav>
                                        @if(!Model.TimeSelectionAndJoinTimes.Key.Ilimitado){
                                                
                                            <button type="button" class='button-card button-mentoria nav-link' 
                                            style="width: fit-content; font-size: 13px; padding: 5px;" onclick="showInteressados('@Model.TimeSelectionAndJoinTimes.Key.Id')"
                                            id="select-interested"> Selecionar Interessados
                                            </button>
                                        }else{
                                            @if(Model.TimeSelectionAndJoinTimes.Value.Count > 0 && Model.TimeSelectionAndJoinTimes.Key?.Status == StatusTimeSelection.Pendente && Model.TimeSelectionAndJoinTimes.Value.Any(joinTime => joinTime.StatusJoinTime == StatusJoinTime.Marcado))
                                            {
                                              <form  asp-page-handler="TimeSelectionStatusMarcado" style="margin-left: auto;justify-content: end;display: flex;" >
                                                <input type="hidden" name="id" value="@Model.TimeSelectionAndJoinTimes.Key?.Id">
                                                <button
                                                    type="submit"
                                                    class="button-capacitacao"
                                                    style="width: fit-content;margin: 20px;">
                                                    Encerrar inscrições e confirmar sala
                                                </button>
                                                </form>
                                            }
                                        }
                                    </nav>
                                    }
                                    

                                </div>
                                
                            </div>
                                    
                        </div>
                        <hr>
                        <div id="consideracoes" style="display: flex;flex-direction: column;">
                            
                            @if(isARequestHelp){
                                <p style="font-size: 20px; font-weight: 600; color: #373737;">Pedido de Ajuda:</p>
                                @if(Model.TimeSelectionAndJoinTimes.Key?.RequestedHelpImagePath != null || Model.TimeSelectionAndJoinTimes.Key?.Descricao != null){
                                    
                                    <div style="background-color: #F2F2F2; border: 1px solid #d7d7d7; padding: 10px; gap: 20px;display: flex;margin-bottom: 15px;flex-direction: column;">
                                        <span style="font-weight: 400;">@Model.TimeSelectionAndJoinTimes.Key.Descricao</span>
                                        
                                        @if(@Model.TimeSelectionAndJoinTimes.Key?.RequestedHelpImagePath != null && @Model.TimeSelectionAndJoinTimes.Key?.RequestedHelpImagePath.Length > 0) {
                                                <div style="display: flex; justify-content: center">
                                                    <div class="helpBackstageImg-container">
                                                        <img class="helpBackstageImg" alt="Imagem de pedido de ajuda" src="@Model.TimeSelectionAndJoinTimes.Key?.RequestedHelpImagePath" style="height: 500px; object-fit: contain;" />
                                                        <a href="./@Model.TimeSelectionAndJoinTimes.Key?.RequestedHelpImagePath" target="_blank" class="overlay"><strong style="font-size: 30px">Abrir imagem</strong></a>
                                                    </div>
                                                </div>
                                            }
                                    </div>
                                }
                            }else{
                                @* <div class="col-6 d-flex flex-column justify-content-between">
                                    <div style="height: 50%;">
                                        <p style="font-size: 17.5px;color: #373737;margin: 5px;width: 100%;">Considerações finais:</p>
                                        <div class="alert-consideration" role="alert">
                                            Indisponível
                                        </div>
                                    </div>
                                </div> *@
                            }
                            
                            <div style="display: flex;width: 100%;justify-content: end;">

                                @{
                                    Console.WriteLine(Model.TimeSelectionAndJoinTimes.Key?.TempoRestante);

                                     int tempoRestanteEmHoras = 0;
                                        if (!string.IsNullOrEmpty(Model.TimeSelectionAndJoinTimes.Key?.TempoRestante))
                                        {
                                            if (int.TryParse(Model.TimeSelectionAndJoinTimes.Key.TempoRestante, out int tempoRestante))
                                            {
                                                tempoRestanteEmHoras = tempoRestante;
                                            }
                                        }
                                    int dias = tempoRestanteEmHoras / 24;
                                    int horas = tempoRestanteEmHoras % 24;
                                
                                    if(tempoRestanteEmHoras > 0)
                                    {
                                        <div class="balao-messagem">
                                            <p style="margin: 0; font-size: 12px;">Faltam <b>@dias dias e @horas horas</b> para a orientação!</p>
                                        </div>
                                    }else{
                                        <div style="height: 50px;"></div>
                                    }

                                }
                            </div>
                            <div class="col-6 d-flex align-items-end" style="justify-content: space-between; width: 100%;" >
                                <form id="CancelTime-@Model.TimeSelectionAndJoinTimes.Key?.Id" method="post">
                                    <div onclick="cancelEvent('@Model.TimeSelectionAndJoinTimes.Key?.Id')" 
                                    class="btn botao-cancelar btn-block">
                                        Cancelar Orientação
                                    </div>
                                </form>
                                
                                @if(Model.TimeSelectionAndJoinTimes.Key?.Status == StatusTimeSelection.Marcado || Model.TimeSelectionAndJoinTimes.Key?.Status == StatusTimeSelection.ConclusaoPendente) {
                                    if(tempoRestanteEmHoras == 0 
                                    || tempoRestanteEmHoras == 1)
                                    {
                                        <button
                                        id="entrar-sala"
                                        class="button botao-entrar-active button-right"
                                        onclick="window.open('@Model.TimeSelectionAndJoinTimes.Key?.LinkSala', '_blank');"
                                        >
                                            Entrar na Sala
                                        </button>
                                    } else {
                                    <button
                                        id="entrar-sala"
                                        class="button botao-entrar button-right"
                                        desabled
                                    >
                                        Entrar na Sala
                                    </button>
                                    }   
                                    
                                } else {
                                    <button
                                        id="entrar-sala"
                                        class="button botao-entrar button-right"
                                        desabled
                                    >
                                        Entrar na Sala
                                    </button>
                                }   
                            </div>
                        </div>
                    </div>
                </div>

                <div class="tab-content" id="interested-content-@Model.TimeSelectionAndJoinTimes.Key?.Id" style="display: none;">
                    <section style="display: flex;align-items: center;padding: 15px 5px;">
                        <img class="voltar" alt="icone-seta-esquerda" src="/Pictures/Icons/seta-capacitacao.svg" onclick="backToHome('@Model.TimeSelectionAndJoinTimes.Key?.Id')" style="cursor: default;"></img>
                        <h5 class="modal-title" id="eventModalLabel" style="color: #9067B2;font-size: 32px;font-weight: 500;letter-spacing: 0.015em;margin: 0px;word-wrap: break-word;padding: 0px 30px;text-align: center; line-height: 1.1;">
                            Interessados
                        </h5>  
                    </section>
                    <section style="display: flex;padding: 5px;">
                        @if(!isARequestHelp){
                            <h6 style="font-size: 24px; ">Escolha o candidato para orientar</h6> 
                        } 
                        @if(isARequestHelp){
                            <h6 style="font-size: 24px; ">Escolha o seu mentor</h6> 
                        }
                        <div class="alert-consideration" role="alert"  style="margin-left: 50px;">
                            <strong>Atenção:</strong> Não será possível alterar os selecionados.
                        </div>
                    </section>
                    <hr>
                    <p style="padding: 5px; margin: 0;">Abaixo estão os candidatos interessados para orientação.</p>
                    <div>
                        @{
                            foreach(var item in Model.TimeSelectionAndJoinTimes.Value)
                            {
                                if (item.StatusJoinTime == StatusJoinTime.Pendente )
                                {
                                    <div style="border: 1px solid #f2f2f2;box-shadow: 0px 2px 3px 0px #00000040; width: 100%; height: 94px;">
                                        <div style="display: flex;align-items: center;justify-content: space-between;">
                                            <div style="display: flex;align-items: center;gap: 10px; padding: 20px;">
                                                @await Html.PartialAsync("Components/_PerfilAvatar",
                                                    new _PerfilAvatar{
                                                        Perfil = item.Perfil ?? new(),
                                                        WithLink = true,
                                                        Size = "avatar-md"
                                                })
                                                <div>
                                                    <h6 style="font-size: 16px;font-weight: 700;letter-spacing: 0.015em;text-align: left;margin-bottom: 2px;">@item.Perfil?.Nome</h6>
                                                    <p style="font-size: 12px;font-weight: 500;letter-spacing: 0em;text-align: left;margin-bottom: 2px;margin: 0;">@item.Perfil?.Bio</p>
                                                    
                                                    @{
                                                        int index = Array.IndexOf(valuesExperience, item.Perfil?.Experiencia);
                                                    }
                                                    <div style="background-color: #FFFFFF;border: 1px solid #CECECE;font-size: 10px;border-radius: 8px;width: 63px;height: 17px;
                                                    padding: 2px 3px;text-align: center;display: flex; align-items: center;justify-content: center;">@stringsExperience[index] xp</div>
                                                </div>
                                            </div>
                                            <button class="button-capacitacao action showToAccept"
                                            data-modal-id="@Model.TimeSelectionAndJoinTimes.Key?.Id"
                                            data-jointime="@item.JoinTimeId"
                                            data-perfil="@item.Perfil!.Id"
                                            style="width: fit-content;margin: 20px;">
                                                <p style="margin: 0;">Selecionar</p>
                                            </button>
                                        </div>        
                                    </div>
                                }
                            }
                        }
                    </div>
                    <hr>
                    <div style="display: flex; justify-content: space-between;padding: 20px 15px;">
                        @if(!isARequestHelp){
                            <h6 style="margin: 0;color: #734B95; font-size: 20px;font-weight: 600;width: 156px;">
                                Selecionar aluno aleatoriamente
                            </h6>
                            <form  asp-page-handler="SetAlunoAleatorio"  >
                                <input type="hidden" name="timeSelectionId" value="@Model.TimeSelectionAndJoinTimes.Key?.Id">
                                <button
                                    type="submit"
                                    class=" action showToAccept"
                                    style="color: #734B95; border: 2px solid #734B95; font-size:16px; font-weight:500; width: fit-content;background-color: transparent;padding: 5px 10px;">
                                    Aluno Aleatório
                                </button>
                            </form>
                        }
                        @if(isARequestHelp){
                            <h6 style="margin: 0;color: #734B95; font-size: 20px;font-weight: 600;width: 156px;">
                                Selecionar mentor aleatoriamente
                            </h6>
                            <form  asp-page-handler="SetAlunoAleatorio"  >
                                <input type="hidden" name="timeSelectionId" value="@Model.TimeSelectionAndJoinTimes.Key?.Id">
                                <button
                                    type="submit"
                                    class=" action showToAccept"
                                    style="color: #734B95; border: 2px solid #734B95; font-size:16px; font-weight:500; width: fit-content;background-color: transparent;padding: 5px 10px;">
                                    Mentor Aleatório
                                </button>
                            </form>
                        }
                        
                    </div>
                    <hr>
                    <h6>Seu compromisso é com:</h6>
                    <div style="display: flex;gap: 10px;flex-wrap: wrap;padding: 10px;">
                        @foreach(var item in Model.TimeSelectionAndJoinTimes.Value)
                        {
                            if (item.StatusJoinTime == StatusJoinTime.Marcado )
                            {
                                <div style="border: 1px solid #f2f2f2;box-shadow: 0px 2px 3px 0px #00000040; width: 200px; height: 100px; border-radius: 8px;display: flex;">
                                    <div style="display: flex;align-items: center;gap: 10px; padding: 10px;">
                                        @await Html.PartialAsync("Components/_PerfilAvatar",
                                            new _PerfilAvatar{
                                                Perfil = item.Perfil ?? new(),
                                                WithLink = true,
                                                Size = "avatar-md"
                                        })
                                        <div>
                                            <h6 style="font-size: 16px;font-weight: 700;letter-spacing: 0.015em;text-align: left;margin-bottom: 2px;">@item.Perfil?.Nome</h6>
                                            <p style="font-size: 12px;font-weight: 500;letter-spacing: 0em;text-align: left;margin-bottom: 2px;margin: 0;word-wrap: break-word;">@item.Perfil?.Bio</p>
                                            
                                            @{
                                                int index = Array.IndexOf(valuesExperience, item.Perfil?.Experiencia);
                                            }
                                            <div style="background-color: #FFFFFF;border: 1px solid #CECECE;font-size: 10px;border-radius: 8px;width: 63px;height: 17px;
                                            padding: 2px 3px;text-align: center;display: flex; align-items: center;justify-content: center;">@stringsExperience[index] xp</div>
                                        </div>
                                    </div>     
                                </div>
                            }
                        }
                    </div> 
                    @if(Model.TimeSelectionAndJoinTimes.Value.Count > 0 && Model.TimeSelectionAndJoinTimes.Key?.Status == StatusTimeSelection.Pendente && Model.TimeSelectionAndJoinTimes.Value.Any(joinTime => joinTime.StatusJoinTime == StatusJoinTime.Marcado))
                    {
                        <form  asp-page-handler="TimeSelectionStatusMarcado" style="margin-left: auto;justify-content: end;display: flex;" >
                                <input type="hidden" name="id" value="@Model.TimeSelectionAndJoinTimes.Key?.Id">
                                <button
                                    type="submit"
                                    class="button-capacitacao"
                                    style="width: fit-content;margin: 20px;">
                                    Encerrar inscrições e confirmar sala
                                </button>
                            </form>
                    }
                </div>
            </div>
        </div>
    </div>
</div>



<script>

        function showInteressados(id){
            $('#interested-content-' + id ).show();
            $('#home-' + id).hide();
        };
        function backToHome(id){
            $('#interested-content-' + id).hide();
            $('#home-' + id).show();
        };
</script>
